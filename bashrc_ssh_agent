# To avoid duplicated activation
# Source SSH settings, if applicable
SSH_ENV="${HOME}/.ssh_environment"
SSHAGENT_SYMLINK="${HOME}/.ssh/agent"
SSHAGENT=/usr/bin/ssh-agent
SSHAGENTARGS="-s"

function start_agent {
  echo -n "Initialising new SSH agent ... "
    ${SSHAGENT} ${SSHAGENTARGS} >"${SSH_ENV}"
    echo "succeeded!"
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}"
    if [ $(find ${HOME}/.ssh -name "id_*" | wc -l) -gt 0 ]; then
      ssh-add $HOME/.ssh/id_*
    fi
}

function sshagent_singleton {
  if [ ! -z `find ${HOME}/.ssh -name "id_*" | wc -l` ]; then
    echo "ssh-agent-singleton: not a client machine. skip."
    return
  fi
  if [ -f "${SSH_ENV}" ]; then
    . "${SSH_ENV}" >/dev/null
    cnt=$(ps -ef | grep "${SSH_AGENT_PID}" | awk '{print $8}' | grep "[/a-zA-Z0-9]*ssh-agent[ -s]*$" | wc -l)
    if [ $cnt -eq 0 ]; then
      echo 'no ssh-agent with condition of ${SSH_ENV}. restart ssh-agent.'
      start_agent;
    fi
    
    if [[ -z `ssh-add -l | grep "${HOME}/.ssh/id_"` ]]; then
      ssh-add $HOME/.ssh/id_*
    fi
  else
      start_agent;
  fi
}

function agentsock_symlink {
  if [ -S "$SSH_AUTH_SOCK" ]; then
    case $SSH_AUTH_SOCK in
      /tmp/*/agent.[0-9]*)
          ln -snf "$SSH_AUTH_SOCK" ${SSHAGENT_SYMLINK} && export SSH_AUTH_SOCK=${SSHAGENT_SYMLINK}
    esac
  elif [ -S ${SSHAGENT_SYMLINK} ]; then
    echo "A socket ${SSHAGENT_SYMLINK} found."
    echo "set SSH_AUTH_SOCK to ${SSHAGENT_SYMLINK} "
    export SSH_AUTH_SOCK=${SSHAGENT_SYMLINK}
  else
      echo "no ssh-agent"
  fi
}

sshagent_singleton
agentsock_symlink
