# To avoid duplicated activation
# Source SSH settings, if applicable
SSH_ENV="${HOME}/.ssh_environment"
AUTHSOCK_SYMLINK="${HOME}/.ssh/auth_sock"
SSHAGENT=/usr/bin/ssh-agent
SSHAGENTARGS="-s"

function start_agent {
  echo -n "Initialising new SSH agent ... "
    ${SSHAGENT} ${SSHAGENTARGS} >"${SSH_ENV}"
    echo "succeeded!"
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}"
    if [ $(find ${HOME}/.ssh -name "id_*" | wc -l) -gt 0 ]; then
      ssh-add $HOME/.ssh/id_*
    fi
    if [ -f "${HOME}/.ssh/google_compute_engine" ]; then 
      ssh-add ${HOME}/.ssh/google_compute_engine
    fi
}

function sshagent_singleton {
  funcname="ssh-agent-singleton"
  if [ `find ${HOME}/.ssh -name "id_*" | wc -l` -eq 0 ]; then
    echo "[$funcname] INFO: not a client machine. skip;"
    return
  fi
  if [ -f "${SSH_ENV}" ]; then
    . "${SSH_ENV}" >/dev/null
    cnt=$(ps -ef | grep "${SSH_AGENT_PID}" | awk '{print $8}' |\
          grep "[/a-zA-Z0-9]*ssh-agent[ -s]*$" | wc -l)
    if [ $cnt -eq 0 ]; then
      echo "[$funcname] no ssh-agent with condition of ${SSH_ENV}. restart ssh-agent;"
      start_agent;
    fi
    
    if [[ -z `ssh-add -l | grep "${HOME}/.ssh/id_"` ]]; then
      ssh-add $HOME/.ssh/id_*
    fi
  else
      start_agent;
  fi
}

function fix_auth_sock {
  funcname="ssh-agent-fix-auth-sock"
  if [ -S "$SSH_AUTH_SOCK" ]; then
    case $SSH_AUTH_SOCK in
      /tmp/*/agent.[0-9]*)
        echo "[$funcname] INFO: SSH_AUTH_SOCK=${SSH_AUTH_SOCK};"
        echo "[$funcname] INFO: link it to ${AUTHSOCK_SYMLINK} and re-export;" 
        ln -snf "$SSH_AUTH_SOCK" ${AUTHSOCK_SYMLINK}
        export SSH_AUTH_SOCK=${AUTHSOCK_SYMLINK}
        ;;
      "${AUTHSOCK_SYMLINK}")
        echo "[$funcname] INFO: ssh-agent authentication socket is already fixed. do nothing."
        ;;
    esac
  elif [ -S ${AUTHSOCK_SYMLINK} ]; then
    echo "[$funcname] INFO: a ssh-agent socket found ${AUTHSOCK_SYMLINK}."
    echo "[$funcname] INFO: set SSH_AUTH_SOCK to ${AUTHSOCK_SYMLINK} "
    export SSH_AUTH_SOCK=${AUTHSOCK_SYMLINK}
  else
    echo "[$funcname] INFO: ${AUTHSOCK_SYMLINK} found but link is dead..."
    newsocket=$(find /tmp/ssh* -name "agent.*")
    if [ ! -z "${newsocket}" ]; then
      echo "[$funcname] INFO: new socket found at '${newsocket}'."
      echo "[$funcname] INFO: re-linked it to ${AUTHSOCK_SYMLINK}"
      ln -snf $newsocket ${AUTHSOCK_SYMLINK}
      export SSH_AUTH_SOCK=${AUTHSOCK_SYMLINK}
    else
      echo "[$funcname] ERROR: no socket found."
    fi
  fi
}

sshagent_singleton
fix_auth_sock
